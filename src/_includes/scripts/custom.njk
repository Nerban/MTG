<script type="text/javascript">
function set3D_Card(id, active){
  var card = document.getElementById(id).getElementsByClassName("3dImage")[0];
  let bounds = card.getBoundingClientRect(); 

  const addRoteToMouse = ()=> {
      bounds = card.getBoundingClientRect();
      document.addEventListener('mousemove', rotateToMouse);
    }

  const removeRoteToMouse = ()=> {
        document.removeEventListener('mousemove', rotateToMouse);
        card.style.transform = '';
        card.style.background = '';
    }

  function rotateToMouse(e) {
  const mouseX = e.clientX;
  const mouseY = e.clientY;
  const leftX = mouseX - bounds.x;
  const topY = mouseY - bounds.y;
  const center = {
    x: leftX - bounds.width / 2,
    y: topY - bounds.height / 2
  }
  const distance = Math.sqrt(center.x**2 + center.y**2);
  
  card.style.transform = `
    scale3d(1.07, 1.07, 1.07)
    rotate3d(
      ${center.y / 100},
      ${-center.x / 100},
      0,
      ${Math.log(distance)* 2}deg
    )
  `;
  
  card.querySelector('.glow').style.backgroundImage = `
    radial-gradient(
      circle at
      ${center.x * 2 + bounds.width/2}px
      ${center.y * 2 + bounds.height/2}px,
      #ffffff55,
      #0000000f
    )
  `;
}


  card.addEventListener('mouseenter', addRoteToMouse);
  card.addEventListener('mouseleave', removeRoteToMouse);


}



  const buildFancyArt= async (id, src)=>{
    const Target = document.getElementById(id);
    var scry_id = Target.getAttribute("scry");

    const response = await fetch("https://api.scryfall.com/cards/"+scry_id,{method: "GET"});
    const myJson = await response.json();

    const Art_Title = Target.getElementsByClassName("title")[0];
    var LINK = Target.getElementsByTagName("a")[0];

    Art_Title.innerHTML = myJson.card_faces[0].name + " - ["+myJson.collector_number+"/81]";
    LINK.href = myJson.scryfall_uri;
}

      const buildArt= async (id)=>{
        const Target = document.getElementById(id);
        var set = Target.getAttribute("set");
        var nr  = Target.getAttribute("nr");
        const Art_Title = Target.getElementsByClassName("title")[0];
        const Art_Image = Target.getElementsByClassName("ART_IMAGE")[0];
        var LINK = Target.getElementsByTagName("a")[0];

        const response = await fetch("https://api.scryfall.com/cards/a"+set+"/"+nr,{method: "GET"});
        const myJson = await response.json();

        Art_Title.innerHTML = myJson.card_faces[0].name + " - ["+myJson.collector_number+"/81]";
        LINK.href = myJson.scryfall_uri;
        Art_Image.src=myJson.card_faces[0].image_uris.large

        var sections = document.getElementsByClassName("CARD_SECTION")[0]
        sections.setAttribute("data-background-image") = "https://cards.scryfall.io/art_crop/front/5/e/5eab58c4-cb34-4645-aaf1-6e3010fcee69.jpg?1679451743"
        console.log(sections)
}
    const populateCard = async (id) => {
      
      const Target = document.getElementById(id);
      var LINK = Target.getElementsByTagName("a")[0];
      const isFlip = Target.getElementsByClassName("FlipButton")[0];
      isFlip.style.display ='none';

      var set = Target.getAttribute("set");
      var nr  = Target.getAttribute("nr");
      var FrontIMG = Target.getElementsByClassName("FrontIMG")[0]; 

       const response = await fetch("https://api.scryfall.com/cards/"+set+"/"+nr,{method: "GET"});
      const myJson = await response.json();
      LINK.href = myJson.scryfall_uri;
      FrontIMG.src = myJson.image_uris.large
      /*
        var scry_id = Target.getAttribute("scry");
        var SPAN = Target.getElementsByTagName("small")[1];
        var IMG = Target.getElementsByClassName("card-image")[0];
        var LINK = Target.getElementsByTagName("a")[0];
        var DIV = Target.getElementsByTagName("div")[0];
      
        var imgUri;
        const response = await fetch("https://api.scryfall.com/cards/"+scry_id,{method: "GET"});
        const myJson = await response.json();
          if(myJson.layout === "transform" || myJson.layout === "double_faced_token")
          {
              isFlip.style.display = "block";
              imgUri = [myJson.card_faces[0].image_uris.large,myJson.card_faces[1].image_uris.large]
              IMG.setAttribute("org", imgUri[0]);
              IMG.setAttribute("trs", imgUri[1]);

              if(Target.id.split("_")[0].includes("foc")){
                if(myJson.type_line.includes("Siege")){
                  IMG.setAttribute("battle", true)
                  IMG.parentNode.classList.add("card-flip-battle");
                  IMG.parentNode.parentNode.classList.add("-scale-x-100") 
                  }else{
                    IMG.parentNode.classList.add("card-flip-transform");
                    IMG.parentNode.parentNode.classList.add("-scale-x-100") 
                  }
                }
              if(Target.id.split("_")[0].includes("com")){
                    IMG.parentNode.classList.add("card-flip-transform");
                    IMG.parentNode.parentNode.classList.add("-scale-x-100") 
                }
          }
          else{imgUri = [myJson.image_uris.large]}

        if(SPAN !== undefined){SPAN.innerHTML = myJson.name;}
        IMG.src = imgUri[0];

        LINK.href = myJson.scryfall_uri;
      */
    }

    const populateFoilCard = async (id) => {
      
      const Target = document.getElementById(id);
      const isFlip = Target.getElementsByClassName("FlipButton")[0];
      isFlip.style.display ='none';

      var scry_id = Target.getAttribute("scry");
      var SPAN = Target.getElementsByTagName("small")[1];
      var IMG = Target.getElementsByClassName("card-image")[0];
      var LINK = Target.getElementsByTagName("a")[0];
      var DIV = Target.getElementsByTagName("div")[0];
    
      var imgUri;
      const response = await fetch("https://api.scryfall.com/cards/"+scry_id,{method: "GET"});
      const myJson = await response.json();
        if(myJson.layout === "transform" || myJson.layout === "double_faced_token")
        {
            isFlip.style.display = "block";
            imgUri = [myJson.card_faces[0].image_uris.large,myJson.card_faces[1].image_uris.large]
            IMG.setAttribute("org", imgUri[0]);
            IMG.setAttribute("trs", imgUri[1]);

            if(Target.id.split("_")[0].includes("foc")){
              if(myJson.type_line.includes("Siege")){
                IMG.setAttribute("battle", true)
                IMG.parentNode.classList.add("card-flip-battle");
                IMG.parentNode.parentNode.classList.add("-scale-x-100") 
                }else{
                  IMG.parentNode.classList.add("card-flip-transform");
                  IMG.parentNode.parentNode.classList.add("-scale-x-100") 
                }
              }
            if(Target.id.split("_")[0].includes("com")){
                  IMG.parentNode.classList.add("card-flip-transform");
                  IMG.parentNode.parentNode.classList.add("-scale-x-100") 
              }
        }
        else{imgUri = [myJson.image_uris.large]}

      if(SPAN !== undefined){SPAN.innerHTML = myJson.name;}
      IMG.src = imgUri[0];

      LINK.href = myJson.scryfall_uri;
    }

    function toggleImg(id){
        const Target = document.getElementById(id); 
        
        var IMG = Target.getElementsByClassName("card-image")[0];
        const isBattle = IMG.hasAttribute("battle");
        if(isBattle){
          if(IMG.parentNode.classList.contains("card-flip-battle")){
          IMG.parentNode.classList.remove("card-flip-battle"); 
          IMG.parentNode.classList.add("card-unflip");
                   setTimeout(function(){
            IMG.parentNode.parentNode.classList.remove("-scale-x-100")    
          },250)
          
          }else if(IMG.parentNode.classList.contains("card-unflip")){
            IMG.parentNode.classList.remove("card-unflip"); 
            IMG.parentNode. classList.add("card-flip-battle");
            setTimeout(function(){
              IMG.parentNode.parentNode.classList.add("-scale-x-100")     
            },250)    
          }

        }else{
          if(IMG.parentNode.classList.contains("card-flip-transform")){
          IMG.parentNode.classList.remove("card-flip-transform"); 
          IMG.parentNode.classList.add("card-unflip");
                   setTimeout(function(){
            IMG.parentNode.parentNode.classList.remove("-scale-x-100")    
          },250)
          
          }else if(IMG.parentNode.classList.contains("card-unflip")){
            IMG.parentNode.classList.remove("card-unflip"); 
            IMG.parentNode. classList.add("card-flip-transform");
            setTimeout(function(){
              IMG.parentNode.parentNode.classList.add("-scale-x-100")     
            },250)    
          }

        }
        
        
        setTimeout(function(){
              IMG.src = IMG.src.includes(IMG.getAttribute("trs"))  ? IMG.getAttribute("org") : IMG.getAttribute("trs");
            }, 350);
        
        


    }

    
</script>
<style>

  .foil-image {
  position:relative;
  z-index:1;
  overflow:hidden;
  text-align:center;

  margin:auto;
  transform-origin:center center;
  -webkit-animation: move 3s infinite linear;
  -moz-animation: move 3s infinite linear;
  animation: move 3s infinite linear;
  }
  .foil-image::after {
  content:' ';
  position:absolute;
  height:200%;
  width:200%;
  top:0px;
  left:0px;
  z-index:2;
  -webkit-animation: moveafter 3s infinite linear;
  -moz-animation: moveafter 3s infinite linear;
  animation: moveafter 3s infinite linear;

  background: -moz-linear-gradient(-45deg,  rgba(255,255,255,0) 0%, rgba(255,255,255,0) 45%, rgba(255,255,255,0.5) 50%, rgba(255,255,255,0) 55%, rgba(255,255,255,0) 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, right bottom, color-stop(0%,rgba(255,255,255,0)), color-stop(45%,rgba(255,255,255,0)), color-stop(50%,rgba(255,255,255,0.2)), color-stop(55%,rgba(255,255,255,0)), color-stop(100%,rgba(255,255,255,0))); /* Chrome,Safari4+ */background: -webkit-linear-gradient(-45deg,  rgba(255,255,255,0) 0%,rgba(255,255,255,0) 45%,rgba(255,255,255,0.2) 50%,rgba(255,255,255,0) 55%,rgba(255,255,255,0) 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(-45deg,  rgba(255,255,255,0) 0%,rgba(255,255,255,0) 45%,rgba(255,255,255,0.2) 50%,rgba(255,255,255,0) 55%,rgba(255,255,255,0) 100%); /* Opera 11.10+ */
  background: -ms-linear-gradient(-45deg,  rgba(255,255,255,0) 0%,rgba(255,255,255,0) 45%,rgba(255,255,255,0.2) 50%,rgba(255,255,255,0) 55%,rgba(255,255,255,0) 100%); /* IE10+ */
  background: linear-gradient(135deg,  rgba(255,255,255,0) 0%,rgba(255,255,255,0) 45%,rgba(255,255,255,0.2) 50%,rgba(255,255,255,0) 55%,rgba(255,255,255,0) 100%); /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#00ffffff', endColorstr='#00ffffff',GradientType=1 ); /* IE6-9 fallback on horizontal gradient */

  }


  @-webkit-keyframes moveafter {
    0% {
    top:100%;
    left:100%;
    }
    50% {
    top:-100%;
    left:-100%;
    }
    100% {
    top:-200%;
    left:-200%;
    }
    }
    @-moz-keyframes moveafter {
    0% {
    top:100%;
    left:100%;
    }
    50% {
    top:-100%;
    left:-100%;
    }
    100% {
    top:-100%;
    left:-100%;
    }
    }
    @keyframes moveafter {
    0% {
    top:100%;
    left:100%;
    }
    50% {
    top:-100%;
    left:-100%;
    }
    100% {
    top:-200%;
    left:-200%;
    }
  }

      .fragment.blur {
        filter: blur(30px) grayscale(100);
      }
      .fragment.blur.visible {
        filter: none;
      }

      .fragment.revealCard{
        .front{
          opacity: 1;
        }
        .back{
          opacity:0;
          transition: opacity 500ms;
        }


      }
      .fragment.revealCard.visible{
        
        .front{
          opacity: 0;
        }
        .back{
          transition: opacity 800ms;
          opacity: 1;
        }
      }

      .fragment.cardBack{
        transform-style: preserve-3d;
        .hide{
          will-change: transform;
          transition: opacity 500ms;
          transition-timing-function: ease-in-out;
          opacity: 1;
        }  
              .front,.back {
        backface-visibility: hidden;

      }

      .back {
        will-change: transform;
        transform: rotateY(180deg) ;
      }
     
      }
      .fragment.cardBack.visible{
        transform: rotateY(180deg);
        will-change: transform;
        transform-style: preserve-3d;
        transition-duration: 250ms;
        transition-timing-function: ease-in-out;


         .hide{

          transition: opacity 200ms;
          opacity: 0;
        }  
      }


      * {
  box-sizing: border-box;
  }



  .card {
    position: relative;
    
    transition-duration: 300ms;
    transition-timing-function: ease-out;
    transform: rotate3d(0);
  }

  .card:hover {
    transition-duration: 150ms;

  }

  .card .glow {
    background-image: radial-gradient(circle at 50% -20%, #ffffff22, #0000000f);
  }
</style>